# -*- coding: utf-8 -*-
"""Limpieza_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1omlvwy07yzwky6DCIf8cIMj66wOwKKf4

# 1. Carga de datos y exploración inicial
"""

import pandas as pd
#cargar archivo con errores
df=pd.read_csv("energy_transition_dirty.csv")
df.head()

"""# 2. Limpieza de datos"""

import numpy as np
# eliminar espacios en blanco (este se aplica a columnas categoricas es decir que solo manejan texto)
df.columns = df.columns.str.strip()
df["Country"] = df["Country"].str.strip()
df.head()

# Corregir columna "Year" a tipo válido
df["Year"] = pd.to_numeric(df["Year"], errors="coerce")
df.head()

# Convertir columnas numéricas
num_cols=["Total_Energy_GWh",
          "Renewable_Energy_GWh",
          "Renewable_Share_percent",
          "CO2_Emissions_kT",
          "Investment_USD_m"]

for col in num_cols:
  df[col]=(
      df[col]
      .astype(str)
      .str.replace(",",".",regex=False)
      .str.extract(r"(\d+\.?\d*)"))
  df[col]=pd.to_numeric(df[col],errors="coerce")
df.head()

# Eliminar filas con valores nulos o vacios
df_clean=df.dropna(subset=[
    "Year",
    "Total_Energy_GWh",
    "Renewable_Energy_GWh",
    "Renewable_Share_percent"])
# Verificar que todo este numérico y sin valores negativos
df_clean=df_clean[df_clean["CO2_Emissions_kT"]>=0]
df_clean=df_clean[df_clean["Investment_USD_m"]>=0]
df_clean.reset_index(drop=True,inplace=True)
df_clean.head()

"""# 3. Guardar la data limpia"""

df_clean.to_csv("energy_transition_clean.csv", index=False)

"""# 4. Visualización de datos

A)
participación de energía renovable por país
"""

import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(10,6))
sns.barplot(
    data=df_clean,
    x="Renewable_Share_percent",
    y="Country",
    estimator="mean",
    errorbar=None,
    palette="viridis"
)
plt.xlabel("Participación (%)")
plt.ylabel("País")
plt.title("Participación de energía renovable por país")
plt.show()

"""B) Evolución del consumo total de energía por país"""

plt.figure(figsize=(12,6))
sns.lineplot(
    data=df_clean,
    x="Year",
    y="Total_Energy_GWh",
#(con el hue se le da color a cada item en este caso a cada país)
    hue="Country",
    marker="o")

plt.xlabel("Años")
plt.ylabel("Energía total")
plt.grid(True)
plt.title("Consumo total de energía por país a lo largo del tiempo")
plt.show()

"""c) Gráfica circular de inversión por país"""

df_gruped=df_clean.groupby("Country")["Investment_USD_m"].sum().sort_values(ascending=False)
plt.figure(figsize=(8,8))
plt.pie(df_gruped,labels=df_gruped.index, autopct="%1.1f%%",startangle=140)
plt.title("Inversión por país")
plt.show()

"""D) Relación entre inversión y reducción de CO"""

plt.figure(figsize=(10,6))

#Estos son los parametros de la gráfica
sns.scatterplot(
    data=df_clean,
    x="Investment_USD_m",
    y="CO2_Emissions_kT",
    hue="Country",
    size="Renewable_Share_percent",
    sizes=(20,200),
    alpha=0.7
)

plt.xlabel("Inversión en USD")
plt.ylabel("Emissions CO2")
plt.title("Relación entre inversión y reducción de CO2")
plt.show()

"""# 5. Convertir CSV a JSON"""

df=pd.read_csv("energy_transition_clean.csv")
df.to_json("energy_transition_clean.json",orient="records")
